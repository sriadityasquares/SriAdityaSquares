@model ModelLayer.ConstructionPic
@{
    ViewBag.ConstructionGallery = "active";
    ViewBag.Title = "Construction Gallery";
    ViewBag.Admin = "active";
    var message = TempData["successmessage"] ?? string.Empty;
}

@using (Html.BeginForm("ProjectGallery", "Booking", FormMethod.Post, new
{
    enctype = "multipart/form-data",
    role = "form",
    id = "submitbtn"

}))
{
    //@(ViewContext.ClientValidationEnabled = false)

    @Html.AntiForgeryToken()
<div class="jumbotron">
    <div class="row">
        <div class="col-md-12 col-xs" style="margin-top:0px">
            <h3 style="margin-top:0px;margin-bottom:4px" align="left">UPLOAD SITE GALLERY</h3>
            <div class="specialLine col-md-1"></div>
        </div>

    </div>


    <div class="row" style="padding-top:35px">
        @Html.LabelFor(m => m.ProjectID, new { @class = "col-md-2" })
        @Html.DropDownListFor(model => model.ProjectID, TempData["ProjectList"] as SelectList, "--Select Project--", new { @class = "textbox-control col-md-3 col-xs" })

    </div>

    <div class="row">
        @Html.LabelFor(m => m.isVideo, new { @class = "col-md-2" })
        @Html.CheckBoxFor(m => m.isVideo)
        @*@Html.DropDownListFor(model => model.ProjectID, TempData["ProjectList"] as SelectList, "--Select Project--", new { @class = "textbox-control col-md-4 col-xs" })*@

    </div>
    <div id="txtURL" class="row">
        @Html.LabelFor(m => m.URL, new { @class = "col-md-2" })

        @*<input id="selfie1" type="file" name="File" required />*@

        @Html.TextBoxFor(m => m.URL, new { @class = "textbox-control col-md-3 col-xs" })

    </div>
    <div id="fileURL" class="row">
        @Html.LabelFor(m => m.URL, new { @class = "col-md-2" })

        <input id="selfie1" type="file" name="File" required />

        

    </div>
    <br />
    <div class="row">
        <div class="row">
            <div class="col-sm-3 no-pad">
                <button type="submit" id="submitbtn" value="New" class="btn btn-default orangebg pull-right"><i class="fa fa-upload"></i>Upload</button>
            </div>
        </div>
    </div>

</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>

    var validationsFlag = false;

    $("#txtURL").hide();
   

    $("#submitbtn").submit(function () {
        Validations();
        if (validationsFlag) {
        
        }
        if (!$('#submitbtn').valid()) {
           $('#ValidationSummaryModal').modal('show');
        }
    });


    $('#isVideo').change(function () {
        if (this.checked) {
            $("#txtURL").show();
            $("#fileURL").hide();
        }
        else {
            $("#txtURL").hide();
            $("#fileURL").show();
        }
    });

    

    function Validations() {


        if ($("#ProjectID").val() == '0' || $("#ProjectID").val() =='') {
                toastr.error("Please Select the project"); return;
        }

        //if ($("#selfie1").val() == '') {
        //        toastr.error("Please Upload File!"); return;
        //}
         validationsFlag = true;
    }
    $(window).load(function () {
        var tempdataval = '@TempData["successmessage"]';
        if (tempdataval != '') {
            if (tempdataval == 'File Uploaded Successfully')
                toastr.success(tempdataval);
            else {
                toastr.error(tempdataval);
            }
        }

    });

    window.onload = function () {
        getLocation();
    }

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        $.get("/Cascade/UpdateAgentLocation", { latitude: position.coords.latitude, longitude: position.coords.longitude }, function (data) {
        });
    }
</script>
