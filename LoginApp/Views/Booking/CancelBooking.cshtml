@model ModelLayer.Cancellation
@{
    ViewBag.Title = "Cancel Booking";
    ViewBag.CancelBooking = "active";
    ViewBag.Booking = "active";
}


<style>

    @@media (min-width: 768px) {

        .container {
            margin-left: 350px;
        }

        .jumbotron {
            width: 1700px;
        }
    }
</style>

<div class="jumbotron">
    @*<div class="row">
            <div class="col-md-1 col-xs">
                <h3 align="center" style="margin-bottom:2px">FLAT LIFECYCLE</h3>
                <div class="specialLine"></div>
            </div>

        </div>*@
    <div class="row">
        <div class="col-md-12 col-xs" style="margin-top:0px">
            <h3 style="margin-top:0px;margin-bottom:4px" align="left">CANCEL BOOKING</h3>
            <div class="specialLine col-md-1"></div>
        </div>

    </div>
    <div class="row" style="padding-top:10px">
        @Html.LabelFor(m => m.ProjectID, new { @class = "col-md-1" })
        @Html.DropDownListFor(model => model.ProjectID, TempData["ProjectList"] as SelectList, "--Select Project--", new { @class = "textbox-control col-md-3 col-xs" })
        @Html.LabelFor(m => m.TowerID, new { @class = "col-md-1" })
        @Html.DropDownListFor(model => model.TowerID, new SelectList(" "), "--Select Tower--", new { @class = "textbox-control col-md-3 col-xs" })
        @Html.LabelFor(m => m.FlatID, new { @class = "col-md-1" })
        @Html.DropDownListFor(model => model.FlatID, new SelectList(" "), "--Select Flat--", new { @class = "textbox-control col-md-3 col-xs" })
    </div>
    <div class="row" style="padding-top:10px">
        @Html.LabelFor(m => m.Comments, new { @class = "col-md-1" })
        @Html.TextAreaFor(model => model.Comments, new { @class = "textboxarea-control col-md-8 col-xs" })

    </div>
    <div class="row" style="padding-top:5px;">
        <div class="col-md-12 col-xs">
            <button type="submit" id="submitbtn" value="New" class="btn btn-default orangebg pull-right">Cancel</button>
        </div>
    </div>
    <div id="example">

        <div class="row">

            @Html.Label("Select Page size", new { @class = "col-md-4" })
            <div class="col-md-3">
                <select id="paper" style="width: 100px;">
                    <option value="size-a4" selected>A4</option>
                    <option value="size-letter">Letter</option>
                    <option value="size-executive">Executive</option>
                </select>
            </div>
            <button class="btn-success" onclick="getPDF('.pdf-page')">Export to PDF</button>
            <button class="btn-success" onclick="fnExcelExport()">Export to Excel</button>
            <button class="btn-danger" id="Close">Close</button>
        </div>

        <div style="overflow:auto;" class="page-container hidden-on-narrow">
            <div class="pdf-page size-a4">
                <div class="inner-page">
                    <h4 style="margin-top: 0px;"><b>BOOKING DETAILS</b></h4>
                    <div id="content">


                    </div>
                    <h4><b>PAYMENT DETAILS</b></h4>
                    <table id="tblPayments" class="table table-bordered">
                        <thead>
                            <tr>
                                <th style="width:100px !important"><span>Amount</span></th>
                                <th style="width:100px !important"><span>Date</span></th>
                                <th><span>Mode</span></th>
                                <th><span>Ref</span></th>
                                <th><span>Details</span></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                    <p>
                        <b>PAID    : Rs.  <span id="TotalPaid"></span></b>
                        <br />
                        <b>BALANCE : Rs.  <span id="TotalBalance"></span></b>

                    </p>

                </div>
            </div>

            <div class="responsive-message"></div>

            <style>

                .pdf-page {
                    font-family: "DejaVu Sans", "Arial", sans-serif;
                }
            </style>

            <script>

                kendo.pdf.defineFont({
                    "DejaVu Sans": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans.ttf",
                    "DejaVu Sans|Bold": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Bold.ttf",
                    "DejaVu Sans|Bold|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
                    "DejaVu Sans|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
                    "WebComponentsIcons": "https://kendo.cdn.telerik.com/2017.1.223/styles/fonts/glyphs/WebComponentsIcons.ttf"
                });
            </script>

            <!-- Load Pako ZLIB library to enable PDF compression -->
            <script src="../content/shared/js/pako.min.js"></script>

            <script>
                function getPDF(selector) {
                    kendo.drawing.drawDOM($(selector)).then(function (group) {
                        kendo.drawing.pdf.saveAs(group, "CheckList.pdf");
                    });
                }
                $('#example').hide();


                $("#paper").kendoDropDownList({
                    change: function () {
                        $(".pdf-page")
                            .removeClass("size-a4")
                            .removeClass("size-letter")
                            .removeClass("size-executive")
                            .addClass(this.value());
                    }
                });

            </script>
            <style>

                tr {
                    padding: 4px !important
                }

                td {
                    padding: 4px !important;
                }

                .pdf-page {
                    position: relative;
                    margin: 0 auto;
                    padding: .4in .3in;
                    color: #333;
                    background-color: #fff;
                    box-shadow: 0 5px 10px 0 rgba(0,0,0,.3);
                    box-sizing: border-box;
                }

                .pdf-header {
                    padding-bottom: .2in;
                    margin-bottom: .3in;
                    /*border-bottom: 1px solid #e5e5e5;*/
                }

                .invoice-number {
                    padding-top: .1in;
                    float: right;
                }

                .pdf-footer {
                    position: absolute;
                    bottom: .25in;
                    left: .3in;
                    right: .3in;
                    padding-top: 0.05in;
                    border-top: 1px solid #e5e5e5;
                    font-size: 0.9em;
                    text-align: left;
                    color: #787878;
                }

                .addresses {
                    font-size: 12px;
                }

                    .addresses:after {
                        display: block;
                        content: "";
                        clear: both;
                    }

                .for {
                    float: left;
                }

                .from {
                    float: right;
                }

                .addresses p {
                    color: #787878;
                    padding: .05in 0;
                    border-top: 1px solid #e5e5e5;
                }

                    .addresses p:first-of-type {
                        border-top: 0;
                    }

                .pdf-body {
                    margin-top: .3in;
                }

                .company-logo {
                    font-size: 1.8em;
                    font-weight: bold;
                    color: #3aabf0;
                }

                .signature {
                    padding-top: .3in;
                }

                /* Dimensions other than px and em should be divided by 1.33 for the proper PDF output */
                .size-a4 {
                    width: 6.2in;
                    height: 10.7in;
                }

                .size-letter {
                    width: 6.3in;
                    height: 8.2in;
                }

                .size-executive {
                    width: 5.4in;
                    height: 7.8in;
                    font-size: 12px;
                }

                    .size-executive .pdf-header {
                        margin-bottom: .1in;
                    }
            </style>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-xs" style="margin-top:0px">
            <h3 style="margin-top:0px;margin-bottom:4px" align="left">CANCELLATIONS</h3>
            <div class="specialLine col-md-1"></div>
        </div>

    </div>
    <div id="grid"></div>
</div>
    <script>
    $("#ProjectID").change(function () {
        $.get("/Booking/GetTowers", { ProjectId: $("#ProjectID").val() }, function (data) {
            //HideDiv();
            $("#TowerID").empty();
            $("#TowerID").append("<option value='" + 0 + "'>" + "--Select Tower--" + "</option>")
            $("#FlatID").empty();
            $("#FlatID").append("<option value='" + 0 + "'>" + "--Select Flat--" + "</option>")
            $.each(data, function (index, row) {
                $("#TowerID").append("<option value='" + row.TowerID + "'>" + row.TowerName + "</option>")
            });
        });
    });

    $("#TowerID").change(function () {

        $.get("/Booking/GetFlatsExceptOpen", { TowerID: $("#TowerID").val() }, function (data) {
            //$("#TowerID").empty();
            //$("#TowerID").append("<option value='" + 0 + "'>" + "--Select Tower--" + "</option>")
            //HideDiv();
            $("#FlatID").empty();
            $("#FlatID").append("<option value='" + 0 + "'>" + "--Select Flat--" + "</option>")
            $.each(data, function (index, row) {
                $("#FlatID").append("<option value='" + row.FlatID + "'>" + row.FlatName + "</option>")
            });
        });
    });



        $("#Close").click(function () {
            $('#example').hide();

        });
    $("#submitbtn").click(function () {


        if ($("#ProjectID").val() == '') {
            toastr.error("Project is Required"); return;
        }
        if ($("#TowerID").val() == '' || $("#TowerID").val() == '0') {
            toastr.error("Tower is Required"); return;
        }
        if ($("#FlatID").val() == '' || $("#FlatID").val() == '0') {
            toastr.error("Flat is Required"); return;
        }

        $.ajax({
            type: "GET",
            url: '@Url.Action("BookingCancellation", "Booking")',
            contentType: "application/json; charset=utf-8",
            data: { flatID: $("#FlatID").val().toString(), comments: $("#Comments").val().toString() },
            dataType: "json",
            success: function (result) {

                if (result) {
                    toastr.success("Booking cancellation success");
                }
                else {
                    toastr.success("Booking cancellation failed");
                }
                location.href = location.href;
            },

            });
    });

    $(document).ready(function () {
        dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Booking/GetCancellations",
                    contentType: "application/json",
                    dataType: "json",
                    type: "POST"
                },
                update: {
                    url: "/Booking/UpdateCancellation",
                    dataType: "json",
                    complete: function (jqXhr, textStatus) {
                        if (textStatus == 'success') {
                            toastr.success('Update Successfull');
                            $("#grid").data("kendoGrid").dataSource.read();
                        }
                        else {
                            toastr.error('Error in Updating');
                            $("#grid").data("kendoGrid").dataSource.read();
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 8,
            schema: {
                model: {
                    id: "ProjectID",
                    fields: {
                        Project: { editable: false },
                        Tower: { editable: false },
                        Flat: { editable: false },
                        FlatID: { editable: false },
                        BookingID: { editable: false },
                        CustomerName: { editable: false },
                        AgentName: { editable: false },
                        BookingAmount: { editable: false },
                        BookingDate: { editable: false },
                        CancelDate: { editable: false }
                        
                    }
                }
            }

        });

        $('.k-icon k-i-edit').toggleClass('.k-icon k-i-edit');
        $("#grid").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            height: 600,
            toolbar: ["search", "excel"],
            excel: {
                fileName: "CancelBookings.xlsx",

                //proxyURL: "https://demos.telerik.com/kendo-ui/service/export",
                filterable: true,
                allPages: true
            },
            columns: [
                
                { field: "FlatID", title: "Flat ID", width: "180px", template: '<button  onclick="GetCheckList(\'' + '#=BookingID#' +'\')">#=FlatID#</button>'},

                
                { field: "Project", title: "Project", width: "100px", editable: false },
                { field: "Tower", title: "Tower", width: "80px", editable: false },
                { field: "Flat", title: "Flat", width: "80px" },
                { field: "CustomerName", title: "Customer", width: "130px" },
                { field: "AgentName", title: "Agent", width: "130px" },
                { field: "BookingAmount", title: "Booking Amount", width: "120px" },
                { field: "BookingDate", title: "Booking Date", width: "100px", template: '#= kendo.toString(kendo.parseDate(BookingDate), "MM/dd/yyyy")#' },
                { field: "CancelDate", title: "Cancel Date", width: "100px", template: '#= kendo.toString(kendo.parseDate(CancelDate), "MM/dd/yyyy")#' },
                { field: "Comments", title: "Comments", width: "130px" },
                {
                    command: [
                        { name: "edit", text: { edit: " ", update: " ", cancel: " " } },
                        //{ name: "destroy", text: " " }
                    ], title: "&nbsp;", width: "60px"
                }],
            editable: "inline",
            
        });


    });

        function GetCheckList(BookingID) {
            
            $.get("/Booking/GetCheckListForCancelledFlats", { BookingID: BookingID }, function (data) {
                $("#content").empty();
                $("#content").append(data);

                $.get("/Booking/GetPaymentsForCancelledFlats", { BookingID: BookingID }, function (data) {
                    var TotalPaid = 0;
                    var BalanceAmount = "";
                    var TotalPaid = 0;
                    var BookingID = "";
                    var Aadhar = "";
                    var DueDate = "";
                    $('#tblPayments tbody tr').remove();
                    $.each(data, function (index, row) {
                        if (row.ReferenceNo == null) {
                            row.ReferenceNo = "";
                        }
                        $('#tblPayments tbody').append("<tr><td> <b>Rs.</b> " + row.BookingAmount + "</td><td>" + row.FormattedDate + "</td><td>" + row.PaymentMode + "</td><td>" + row.ReferenceNo + "</td><td>" + row.Details + "</td></tr>");
                        //$('#table tbody').append("<tr><td>" + row.BookingAmount + "</td><td>" + row.FormattedDate + "</td>" + "</td><td><button type='submit'  name='GenerateReceipt' style='padding:3px;margin-bottom: 0px;' id='Generate' value='" + row.PaymentID + "' class='btn btn-default'><i class='fa fa-file-pdf-o'></i>GENERATE RECEIPT</button></td></tr>");

                        TotalPaid = TotalPaid + Number(row.BookingAmount);
                        BalanceAmount = parseInt(row.BalanceAmount);
                        //BookingID = row.BookingID;

                        Aadhar = row.Aadhar;
                    });

                    //$("#TotalBalance").val(BalanceAmount);
                    $('#TotalBalance')[0].textContent = BalanceAmount;
                    $('#TotalPaid')[0].textContent = TotalPaid;
                });

                $('#example').show();
            });
        }

        function fnExcelExport() {
            var tab_text = "<table border='2px'><thead>BOOKING & PAYMENT DETAILS</thead>";
            var textRange; var j = 0;
            tab = document.getElementById('tblPayments'); // id of table
            tab1 = document.getElementById('tblBookingDetails');

            for (k = 0; k < tab1.rows.length; k++) {
                tab_text = tab_text + tab1.rows[k].innerHTML + "</tr>";

            }
            tab_text = tab_text + "<tr></tr>";
            //tab_text = tab_text + "Payment Details"
            for (j = 0; j < tab.rows.length; j++) {
                tab_text = tab_text + tab.rows[j].innerHTML + "</tr>";
                tab_text = tab_text + "<br/>";
            }




            tab_text = tab_text + "</table>";
            tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
            tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
            tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // reomves input params

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf("MSIE ");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
            {
                txtArea1.document.open("txt/html", "replace");
                txtArea1.document.write(tab_text);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand("SaveAs", true, "Say Thanks to Sumit.xls");
            }
            else                 //other browser not tested on IE 11
                sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

            return (sa);
        }


    </script>
