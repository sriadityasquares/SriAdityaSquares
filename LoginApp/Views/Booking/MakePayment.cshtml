@model ModelLayer.PaymentInformation
@{
    ViewBag.Title = "MakePayment";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Booking = "active";
    ViewBag.MakePayment = "active";
}

@using (Html.BeginForm("MakePayment", "Booking", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "submitbtn" }))
{
    //@(ViewContext.ClientValidationEnabled = false)

    @Html.AntiForgeryToken()
<div class="jumbotron">
    <div class="row">
        <div class="col-md-1 col-xs">
            <h3 align="center" style="margin-bottom:2px">PAYMENTS</h3>
            <div class="specialLine"></div>
        </div>

    </div>
    <div class="row">
        <hr />
    </div>
    @Html.HiddenFor(m => m.PaymentMode)
    @Html.HiddenFor(m => m.BookingID)
    @Html.HiddenFor(m => m.Aadhar)
    @Html.HiddenFor(m => m.PaymentDate)
    @Html.HiddenFor(m => m.ChequeDate)
    <div class="row" style="padding-top:10px">
        @Html.LabelFor(m => m.ProjectID, new { @class = "col-md-1" })
        @Html.DropDownListFor(model => model.ProjectID, TempData["ProjectList"] as SelectList, "--Select Project--", new { @class = "textbox-control col-md-3 col-xs" })
        @Html.LabelFor(m => m.TowerID, new { @class = "col-md-1" })
        @Html.DropDownListFor(model => model.TowerID, new SelectList(" "), "--Select Tower--", new { @class = "textbox-control col-md-3 col-xs" })
        @Html.LabelFor(m => m.FlatID, new { @class = "col-md-1" })
        @Html.DropDownListFor(model => model.FlatID, new SelectList(" "), "--Select Flat--", new { @class = "textbox-control col-md-3 col-xs" })
    </div>
    <div id="paydetails">
        <div class="row justify-content-center" style="padding-top:20px">
            <div class="" col-md-12 col-sm-12 col-xs-12 table-responsive">
                <table id="table" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Amount Paid</th>
                            <th>Date of Payment</th>
                            <th>Payment Mode</th>
                            <th>Cheque Status</th>
                            <th>Reference No</th>
                            <th>Details</th>
                            <th>Save Changes</th>
                            @*<th>Print Receipt</th>*@
                        </tr>

                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>

        </div>


        <div id="paydetails1" style="padding-top:5px" class="row">
            @Html.LabelFor(m => m.TotalPaid, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.TotalPaid, new { @class = "textbox-control col-md-3 col-xs", @readonly = true })
            @Html.LabelFor(m => m.TotalBalance, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.TotalBalance, new { @class = "textbox-control col-md-3 col-xs", @readonly = true })
        </div>
        <div id="paydetails2" style="padding-top:5px" class="row">
            @Html.LabelFor(m => m.BookingAmount, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.BookingAmount, new { @class = "textbox-control col-md-3 col-xs", @type = "number" })
            @Html.LabelFor(m => m.BalanceAmount, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.BalanceAmount, new { @class = "textbox-control col-md-3 col-xs", @type = "number" })
        </div>
        <div id="paydetails3" style="padding-top:5px" class="row">
            @Html.LabelFor(m => m.PaymentModeID, new { @class = "col-md-2" })
            @Html.DropDownListFor(m => m.PaymentModeID, new List<SelectListItem>
        {
             new SelectListItem{ Text="--Mode--", Value = "0"  },
            new SelectListItem{ Text="Cheque", Value = "1" },
            new SelectListItem{ Text="NEFT", Value = "2" },
            new SelectListItem{ Text="CC", Value = "3" },
            new SelectListItem{ Text="Cash", Value = "4" },
         }, new { @class = "textbox-control col-md-3 col-xs", @readonly = "readonly" })
            @Html.LabelFor(m => m.ReferenceNo, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "textbox-control col-md-3 col-xs" })
        </div>
        <div id="paydetails4" style="padding-top:5px" class="row">
            @Html.LabelFor(m => m.PaymentDate, new { @class = "col-md-2" })
            <div class="col-md-3" style="padding-left:0px">
                <input id="datepicker1" title="datepicker" />
            </div>
            @Html.LabelFor(m => m.ChequeDate, new { @class = "col-md-2" })
            <div class="col-md-2" style="padding-left:0px">
                <input id="cqDatePicker" title="datepicker" />
            </div>
        </div>
        <div id="paydetails5" style="padding-top:5px" class="row">
            @Html.LabelFor(m => m.Details, new { @class = "col-md-2" })
            @Html.TextAreaFor(m => m.Details, new { @class = "textboxarea-control col-md-8 col-xs" })

        </div>
        @*<div id="paydetails4" style="padding-top:5px" class="row">

                @Html.LabelFor(m => m.ChequeStatus, new { @class = "col-md-2" })
                @Html.DropDownListFor(m => m.ChequeStatus, new List<SelectListItem>
        {
             new SelectListItem{ Text="Not-Applicable", Value = "Not-Applicable"  },
            new SelectListItem{ Text="Received", Value = "Received" },
            new SelectListItem{ Text="Cleared", Value = "Cleared" },
            new SelectListItem{ Text="Bounced", Value = "Bounced" },
            new SelectListItem{ Text="Hold", Value = "Hold" },
            new SelectListItem{ Text="Cancelled", Value = "Cancelled" }
         }, new { @class = "textbox-control col-md-3 col-xs", @readonly = "readonly" })
            </div>*@
        <div id="paydetails4" style="padding-top:5px" class="row">
            <br />
            <div class="col-md-6 no-pad">
                <button type="submit" id="submitbtn" name="submit" value="New" class="btn btn-default orangebg pull-right"><i class="fa fa-check"></i>PAY</button>
            </div>
        </div>
    </div>
</div>

    
}
<script>

    $("#datepicker1").kendoDatePicker();
    $("#cqDatePicker").kendoDatePicker();
    HideDiv();
    $("#ProjectID").change(function () {
        $.get("/Booking/GetTowers", { ProjectId: $("#ProjectID").val() }, function (data) {
            HideDiv();
            $("#TowerID").empty();
            $("#TowerID").append("<option value='" + 0 + "'>" + "--Select Tower--" + "</option>")
            $("#FlatID").empty();
            $("#FlatID").append("<option value='" + 0 + "'>" + "--Select Flat--" + "</option>")
            $.each(data, function (index, row) {
                $("#TowerID").append("<option value='" + row.TowerID + "'>" + row.TowerName + "</option>")
            });
        });
    });

    $("#TowerID").change(function () {

        $.get("/Booking/GetFlatsInProgress", { TowerId: $("#TowerID").val() }, function (data) {
            //$("#TowerID").empty();
            //$("#TowerID").append("<option value='" + 0 + "'>" + "--Select Tower--" + "</option>")
            HideDiv();
            $("#FlatID").empty();
            $("#FlatID").append("<option value='" + 0 + "'>" + "--Select Flat--" + "</option>")
            $.each(data, function (index, row) {
                $("#FlatID").append("<option value='" + row.FlatID + "'>" + row.FlatName + "</option>")
            });
        });
    });

    $("#FlatID").change(function () {
        TotalPaid = ""
        $.get("/Booking/GetPaymentDetails", { flatID: $("#FlatID").val() }, function (data) {
            var TotalPaid = 0;
            var BalanceAmount = "";
            var BookingID = "";
            var Aadhar = "";
            var DueDate = "";
            $('#table tbody tr').remove();
            $.each(data, function (index, row) {
                if (row.ReferenceNo == null) {
                    row.ReferenceNo = "";
                }
                $('#table tbody').append("<tr><td>" + row.BookingAmount + "</td><td>" + row.FormattedDate + "</td><td>" + row.PaymentMode + "</td><td>" + row.ChequeStatus + "</td><td>" + row.ReferenceNo + "</td><td contenteditable id='" + row.PaymentID + "'>" + row.Details + "</td><td><button class ='btn' onclick='UpdateDetails("+row.PaymentID+")'>Save</button>"+"</tr>");
                //$('#table tbody').append("<tr><td>" + row.BookingAmount + "</td><td>" + row.FormattedDate + "</td>" + "</td><td><button type='submit'  name='GenerateReceipt' style='padding:3px;margin-bottom: 0px;' id='Generate' value='" + row.PaymentID + "' class='btn btn-default'><i class='fa fa-file-pdf-o'></i>GENERATE RECEIPT</button></td></tr>");

                TotalPaid = TotalPaid + Number(row.BookingAmount);
                BalanceAmount = parseInt(row.BalanceAmount);
                BookingID = row.BookingID;

                Aadhar = row.Aadhar;
            });
            $("#TotalPaid").val(TotalPaid);
            $("#TotalBalance").val(BalanceAmount);
            $("#BookingID").val(BookingID);
            $("#Aadhar").val(Aadhar);
            ShowDiv();
        });
    });

    $("#BookingAmount").keyup(function () {
        SetBalanceAmount();
    });

    $("#submitbtn").submit(function () {
        Validations();
        var payDate = kendo.toString($("#datepicker1").data("kendoDatePicker").value(), 'dd-MMM-yyyy');
        var cQDate = kendo.toString($("#cqDatePicker").data("kendoDatePicker").value(), 'dd-MMM-yyyy');
        //alert(fromDate);
        $("#PaymentDate").val(payDate);
        $("#ChequeDate").val(cQDate);
    });

    function SetBalanceAmount() {
        if ($("#TotalBalance").val() != '' && $("#BookingAmount").val() != '') {
            $("#BalanceAmount").val(parseInt($("#TotalBalance").val()) - parseInt($("#BookingAmount").val()))
        }
        else {
            $("#BalanceAmount").val('')
        }
    }

    function UpdateDetails(payID) {
        var Details = $("#" + payID)[0].innerHTML;
        $.get("/Booking/UpdatePaymentDetails", { payID: payID, Details: Details }, function (data) {
            if (data) {
                toastr.success("Payment details updated");
            }
            else {
                toastr.error("Payment details update failed");
            }
        })
    };
    function HideDiv() {
        $("#paydetails").hide();
    };

    function ShowDiv() {
        $("#paydetails").show();
    };

    function Validations() {

        if ($("#BookingAmount").val() == '') {
            toastr.error("Booking Amount Required"); return;
        }

        if ($("#PaymentModeID").val() == '0') {
            toastr.error("Payment mode is required");
        }
        $("#PaymentMode").val($("#PaymentModeID option:selected").text());
        if ($("#datepicker1").data("kendoDatePicker").value() == null || $("#datepicker1").data("kendoDatePicker").value() == '') {
            toastr.error("Please select Payment Date");
            return;
        }
    }
</script>

<script type="text/javascript">
    $(window).load(function () {
        var tempdataval = '@TempData["successmessage"]';
        if (tempdataval != '') {
            if (tempdataval == 'Payment Successfull')
                toastr.success(tempdataval);
            else {
                toastr.error(tempdataval);
            }
        }

    });
</script>